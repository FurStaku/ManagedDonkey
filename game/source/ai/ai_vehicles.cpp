#include "ai/ai_vehicles.hpp"

#include "cseries/cseries.hpp"

//.text:014416B0 ; void __cdecl ai_vehicle_enter2(int32, int32)
//.text:014416D0 ; void __cdecl ai_vehicle_enter(int32, int32, int32)
//.text:014416F0 ; void __cdecl ai_vehicle_enter_immediate2(int32, int32)
//.text:01441710 ; void __cdecl ai_vehicle_enter_immediate(int32, int32, int32)
//.text:01441730 ; void __cdecl ai_vehicle_enter_internal(int32, int32, int32, bool)
//.text:01441800 ; void __cdecl ai_vehicle_flip(int32)
//.text:01441840 ; int32 __cdecl ai_vehicle_get(int32)
//.text:014418C0 ; int32 __cdecl ai_vehicle_get_from_spawn_point(int32)
//.text:014418F0 ; int32 __cdecl ai_vehicle_get_from_squad(int32, int16)
//.text:01441920 ; int32 __cdecl ai_vehicle_get_from_starting_location(int32)
//.text:014419B0 ; bool __cdecl ai_vehicle_overturned(int32)
//.text:014419D0 ; bool __cdecl ai_vehicle_reserve(int32, bool)
//.text:01441A90 ; bool __cdecl ai_vehicle_reserve_seat(int32, int32, bool)
//.text:01452740 ; void __cdecl actor_attach_to_seat(int32, int32, int16, real32, bool)
//.text:01452840 ; void __cdecl actor_attach_to_vehicle(int32, int32, bool)
//.text:01452980 ; bool __cdecl actor_handle_seat_attach(int32, int32, int16)
//.text:01452CB0 ; void __cdecl actor_handle_seat_entry(int32, int32, int16)
//.text:01452D70 ; void __cdecl actor_handle_seat_exit(int32, int32, int16, bool, e_motor_program*)
//.text:01452E60 ; void __cdecl actor_handle_seat_exit_start(int32, int32, int16)
//.text:01452EB0 ; void __cdecl actor_handle_vehicle_detach(int32, int32, int32, int16)
//.text:01453010 ; void __cdecl actor_throttle_vehicle_speed(int32)
//.text:01453300 ; int32 __cdecl ai_get_root_vehicle(int32)
//.text:01453340 ; void __cdecl ai_handle_driver_change(int32)
//.text:014534E0 ; void __cdecl ai_player_handle_seat_entry(int32, int32, int16)
//.text:014536B0 ; void __cdecl ai_player_handle_seat_exit(int32, int32, int16)
//.text:014537C0 ; void __cdecl ai_player_handle_seat_exit_start(int32)
//.text:01453810 ; real32 __cdecl ai_unit_get_seat_preference(int32, int16, bool, bool, bool)
//.text:01453960 ; real32 __cdecl ai_unit_get_seat_score(int32, int32, int16, real32, bool)
//.text:01453B20 ; bool __cdecl ai_unit_seat_allowed(int32, int32, int16, e_game_team)
//.text:01453BD0 ; bool __cdecl ai_unit_seat_disallowed(int32, int32, int16, e_game_team)
//.text:01453E50 ; bool __cdecl ai_unit_seats_available(int32)
//.text:01453ED0 ; bool __cdecl ai_vehicle_cancel_reservation(int32)
//.text:01453F70 ; bool __cdecl ai_vehicle_check_seat(int32, seat_entry_info*)
//.text:01453FE0 ; bool __cdecl ai_vehicle_choose_seat(int32)
//.text:01454150 ; bool __cdecl ai_vehicle_desirable(int32, int32, bool, bool)
//.text:01454270 ; bool __cdecl ai_vehicle_enterable(int32, int32, real32, bool)
//.text:01454370 ; bool __cdecl ai_vehicle_evaluate_seat(int32, int32, int16, bool, seat_entry_info*)
//.text:01454800 ; bool __cdecl ai_vehicle_find_seat(int32, int32, unit_seat_source const*, int16, seat_entry_info*)
//.text:01454A10 ; int32 __cdecl ai_vehicle_get_driver(int32, e_game_team)
//.text:01454A80 ; int16 __cdecl ai_vehicle_get_num_flip_actors(int32)
//.text:01454AD0 ; int16 __cdecl ai_vehicle_get_num_reservations(int32, e_game_team, bool)

int32 __cdecl ai_vehicle_get_reservation(int32 vehicle_index, int32 seat_index, e_game_team team_index)
{
	return INVOKE(0x01454C00, ai_vehicle_get_reservation, vehicle_index, seat_index, team_index);
}

//.text:01454C70 ; void __cdecl ai_vehicle_handle_allegiance_change(int32)
//.text:01454D70 ; void __cdecl ai_vehicle_lock_actors(int32, e_game_team)
//.text:01454EC0 ; bool __cdecl ai_vehicle_occupied_by_enemy(int32, e_game_team)
//.text:01454FC0 ; bool __cdecl ai_vehicle_ready_for_lockdown(int32, e_game_team)
//.text:01455040 ; bool __cdecl ai_vehicle_reserve_seat(int32, int32, int32, real32)
//.text:01455170 ; int16 __cdecl ai_vehicle_seat_count(int32, bool)
//.text:014551E0 ; bool __cdecl ai_vehicle_seats_available(int32, int32)
//.text:01455300 ; bool __cdecl ai_vehicle_turret_valid_angle(int32, int32, int32)
//.text:01455600 ; bool __cdecl ai_vehicle_turret_valid_distance(int32, int32, int32, real32)

